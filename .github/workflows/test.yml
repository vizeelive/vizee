name: Tests

on: [pull_request]

jobs:
  cypress-run:
    name: Cypress Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: yarn start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          record: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          cypress_auth_audience: ${{secrets.CYPRESS_AUTH_AUDIENCE}}
          cypress_auth_url: ${{secrets.CYPRESS_AUTH_URL}}
          cypress_auth_client_id: ${{secrets.CYPRESS_AUTH_CLIENT_ID}}
          cypress_auth_client_secret: ${{secrets.CYPRESS_AUTH_CLIENT_SECRET}}
          cypress_auth_username: ${{secrets.CYPRESS_AUTH_USERNAME}}
          cypress_auth_password: ${{secrets.CYPRESS_AUTH_PASSWORD}}
          cypress_auth_admin_username: ${{secrets.CYPRESS_AUTH_ADMIN_USERNAME}}
          cypress_auth_admin_password: ${{secrets.CYPRESS_AUTH_ADMIN_PASSWORD}}

  ui-tests:
    name: Jest UI Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Install packages
        run: npx yarn --frozen-lockfile

      - name: Build
        run: yarn build
        env:
          CI: true
          NODE_OPTIONS: "--max_old_space_size=4096"

      - name: Run tests
        run: npm run test:coverage

      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  api-tests:
    name: Jest API Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@master

      - name: Install packages
        run: npm ci
        working-directory: ./api

      - name: Run tests
        run: npx jest
        working-directory: ./api
        env:
          MUX_TOKEN_ID: nada
          MUX_TOKEN_SECRET: nada

      - name: Upload code coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
